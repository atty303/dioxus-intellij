name: build

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_PRIVATE_KEY }}
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          token: ${{ steps.app-token.outputs.token }}

  build-rust:
    strategy:
      matrix:
        include:
          - target: "x86_64-pc-windows-msvc"
            runner: windows-latest
            name: dioxus.dll
          - target: "aarch64-pc-windows-msvc"
            runner: windows-11-arm
            name: dioxus.dll
          - target: "x86_64-unknown-linux-gnu"
            runner: ubuntu-24.04
            name: libdioxus.so
          - target: "aarch64-unknown-linux-gnu"
            runner: ubuntu-24.04-arm
            name: libdioxus.so
          - target: "x86_64-apple-darwin"
            runner: macos-13
            name: libdioxus.dylib
          - target: "aarch64-apple-darwin"
            runner: macos-15
            name: libdioxus.dylib
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2

#      - name: Rust Cache
#        uses: Swatinem/rust-cache@v2
#        with:
#          key: ${{ matrix.target }}
#          workspaces: rust

      - name: Build
        shell: bash
        run: |
          mise run rust:build --target ${{ matrix.target }} --release
          find src/main/resources

      - name: Test
        run: mise run test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: rust/target/${{ matrix.target }}/release/${{ matrix.name }}
          if-no-files-found: error

  build-plugin:
    runs-on: ubuntu-latest
    needs: build-rust
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to resources
        shell: bash
        run: |
          mkdir -p src/main/resources/win32-x86-64
          mv artifacts/x86_64-pc-windows-msvc/dioxus.dll src/main/resources/win32-x86-64/dioxus.dll
          mkdir -p src/main/resources/win32-aarch64
          mv artifacts/x86_64-pc-windows-msvc/dioxus.dll src/main/resources/win32-aarch64/dioxus.dll

          mkdir -p src/main/resources/linux-x86-64
          mv artifacts/x86_64-unknown-linux-gnu/libdioxus.so src/main/resources/linux-x86-64/libdioxus.so
          mkdir -p src/main/resources/linux-aarch64
          mv artifacts/aarch64-unknown-linux-gnu/libdioxus.so src/main/resources/linux-aarch64/libdioxus.so

          mkdir -p src/main/resources/darwin-x86-64
          mv artifacts/x86_64-apple-darwin/libdioxus.dylib src/main/resources/darwin-x86-64/libdioxus.dylib
          mkdir -p src/main/resources/darwin-aarch64
          mv artifacts/aarch64-apple-darwin/libdioxus.dylib src/main/resources/darwin-aarch64/libdioxus.dylib

          find src/main/resources

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: gradle

      - name: Build plugin
        run: ./gradlew buildPlugin

      - name: Sign plugin
        env:
          CERTIFICATE_CHAIN: ${{ secrets.SIGNING_CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.SIGNING_PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.SIGNING_PRIVATE_KEY_PASSWORD }}
        run: ./gradlew signPlugin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin
          path: build/distributions/dioxus-*-signed.zip
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [ build-plugin, release-please ]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: plugin
          path: build/distributions/

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_PRIVATE_KEY }}

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} build/distributions/dioxus-*-signed.zip

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: gradle

      - name: Upload to Marketplace
        env:
          PUBLISH_TOKEN: ${{ secrets.MARKETPLACE_PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin
