name: build

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_PRIVATE_KEY }}
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          token: ${{ steps.app-token.outputs.token }}

  build-rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: "x86_64-pc-windows-gnu"
            name: dioxus.dll
          - target: "x86_64-unknown-linux-gnu"
            name: libdioxus.so
          - target: "aarch64-unknown-linux-gnu"
            name: libdioxus.so
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
          workspaces: rust

      - name: Install cross
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cross

      - name: Build
        working-directory: rust
        run: cross build --target ${{ matrix.target }} --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: rust/target/${{ matrix.target }}/release/${{ matrix.name }}
          if-no-files-found: error

  build-plugin:
    runs-on: ubuntu-latest
    needs: build-rust
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to resources
        run: |
          mkdir -p src/main/resources/win32-x86-64
          mv artifacts/x86_64-pc-windows-gnu/dioxus.dll src/main/resources/win32-x86-64/dioxus.dll
          mkdir -p src/main/resources/linux-x86-64
          mv artifacts/x86_64-unknown-linux-gnu/libdioxus.so src/main/resources/linux-x86-64/libdioxus.so
          mkdir -p src/main/resources/linux-aarch64
          mv artifacts/aarch64-unknown-linux-gnu/libdioxus.so src/main/resources/linux-aarch64/libdioxus.so

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      - name: Build plugin
        run: ./gradlew buildPlugin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin
          path: build/distributions/*.zip
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [ build-plugin, release-please ]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: plugin

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_PRIVATE_KEY }}

      - run: ls -R .

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} plugin/*.zip
